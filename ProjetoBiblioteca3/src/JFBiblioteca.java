
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class JFBiblioteca extends javax.swing.JFrame {
    Mysql banco = new Mysql();
    DefaultTableModel model;
    
    public JFBiblioteca() {
        initComponents();
        int valida =  banco.conectar("localhost","3306","bancobiblioteca","root","101311");
        if(valida == 1){
            System.out.println("Conectado!");
        }
        model = (DefaultTableModel)jTableBiblioteca.getModel(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBiblioteca = new javax.swing.JTable();
        jBAdicionar = new javax.swing.JButton();
        jBConsultaTudo = new javax.swing.JButton();
        jBConsulta = new javax.swing.JButton();
        jTFNomeLivro = new javax.swing.JTextField();
        jTFAutor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFNomeConsulta = new javax.swing.JTextField();
        jCBTipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Biblioteca");
        jLabel1.setMaximumSize(new java.awt.Dimension(60, 20));

        jTableBiblioteca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome do Livro", "Autor", "Emprestado", "Com quem", "Data que pegou"
            }
        ));
        jScrollPane1.setViewportView(jTableBiblioteca);

        jBAdicionar.setText("Adicionar");
        jBAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarActionPerformed(evt);
            }
        });

        jBConsultaTudo.setText("Consultar Tudo");
        jBConsultaTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultaTudoActionPerformed(evt);
            }
        });

        jBConsulta.setText("Consultar");
        jBConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultaActionPerformed(evt);
            }
        });

        jTFAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFAutorActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome do Livro");

        jLabel3.setText("Nome do Autor");

        jCBTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "livro", "autor", " " }));

        jLabel4.setText("Tipo de Consulta");

        jLabel5.setText("Nome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jBAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTFNomeLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jBConsultaTudo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTFAutor))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel3)
                                        .addGap(325, 325, 325)
                                        .addComponent(jLabel4)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addComponent(jTFNomeConsulta)
                                    .addComponent(jBConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                .addGap(12, 12, 12)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNomeLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNomeConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConsulta)
                    .addComponent(jBAdicionar)
                    .addComponent(jBConsultaTudo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFAutorActionPerformed

    private void jBAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarActionPerformed
        // TODO add your handling code here:
        //Pegar os dados e mandar para o banco
        String livro = jTFNomeLivro.getText();
        String nomeAutor = jTFAutor.getText();
        
        int valida = banco.inserir(livro, nomeAutor);
        if(valida == 1){
            System.out.println("Inseriu");
            model.setRowCount(0);
            System.out.println("Inseriu!!");
            ResultSet rs = banco.consultar();
            if(rs != null){
                try{
                    while(rs.next()){
                        String ID = rs.getString(1);
                        String nome = rs.getString(2);
                        String autor = rs.getString(3);
                        String emprestado = rs.getString(4);
                        String responsavel = rs.getString(5);
                        String data = rs.getString(6);
                        
                    
                        model.addRow(new String[]{ID,nome,autor,emprestado,responsavel,data});
                    }
                }catch(SQLException ex){               
                }
            }
        }
        limpaCampos();
        //consultar tudo e mandar para a tabela
        
        
        
    }//GEN-LAST:event_jBAdicionarActionPerformed

    private void jBConsultaTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultaTudoActionPerformed
        // TODO add your handling code here:
        model.setRowCount(0);
        ResultSet rs = banco.consultar();
        if(rs != null){
            try{
                while(rs.next()){
                    String ID = rs.getString(1);
                    String nome = rs.getString(2);
                    String autor = rs.getString(3);
                    String emprestado = rs.getString(4);
                    String responsavel = rs.getString(5);
                    String data = rs.getString(6);           
                    model.addRow(new String[]{ID,nome,autor,emprestado,responsavel,data});
                }
            }catch(SQLException ex){               
            }
        }
    }//GEN-LAST:event_jBConsultaTudoActionPerformed

    private void jBConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultaActionPerformed
        // TODO add your handling code here:
        
        //pega o nome da consulta e o tipo de consulta
        String nomeConsulta = jTFNomeConsulta.getText();
        String tipoConsulta = (String) jCBTipo.getSelectedItem();
        
         model.setRowCount(0);
        //manda para o banco consultar especifico
        ResultSet rs = banco.consultar(nomeConsulta,tipoConsulta);
        if(rs != null){
            try{
                while(rs.next()){
                    String ID = rs.getString(1);
                    String nome = rs.getString(2);
                    String autor = rs.getString(3);
                    String emprestado = rs.getString(4);
                    String responsavel = rs.getString(5);
                    String data = rs.getString(6);           
                    model.addRow(new String[]{ID,nome,autor,emprestado,responsavel,data});
                }
            }catch(SQLException ex){               
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Não encontrou, digite novamente!");
        }
    }//GEN-LAST:event_jBConsultaActionPerformed
    public void limpaCampos(){
        jTFNomeLivro.setText("");
        jTFAutor.setText("");
        jTFNomeConsulta.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFBiblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdicionar;
    private javax.swing.JButton jBConsulta;
    private javax.swing.JButton jBConsultaTudo;
    private javax.swing.JComboBox<String> jCBTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFAutor;
    private javax.swing.JTextField jTFNomeConsulta;
    private javax.swing.JTextField jTFNomeLivro;
    private javax.swing.JTable jTableBiblioteca;
    // End of variables declaration//GEN-END:variables
}
